name: linux

on:
  pull_request:
    branches:
      - develop
      - master
      - test/actions
  push:
    branches:
      - develop
      - master
      - test/actions

jobs:
  build:
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        cxx:
          - g++-9
          - g++-10
          - clang++-10
        include:
          - cxx: g++-9
            cc: gcc-9
          - cxx: g++-10
            cc: gcc-10
          - cxx: clang++-10
            cc: clang-10
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Checkout DREAM3D_Data Repo
        uses: actions/checkout@v2
        with:
          repository: DREAM3D/DREAM3D_Data
          path: DREAM3D_Data
          submodules: true          
      - name: Add C++ Problem Matcher
        uses: ammaraskar/gcc-problem-matcher@a141586609e2a558729b99a8c574c048f7f56204
      - name: Install Dependencies
        run: |
          sudo apt-get -y install ninja-build
      - name: Setup NuGet Credentials
        shell: bash
        run: >
          mono `vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/BlueQuartzSoftware/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "BlueQuartzSoftware"
          -password "${{secrets.GITHUB_TOKEN}}"
      - name: Configure
        env:
          CC: ${{matrix.cc}}
          CXX: ${{matrix.cxx}}
        run: |
          cmake --preset ci ${{github.workspace}} -D DREAM3D_DATA_DIR=${{github.workspace}}/DREAM3D_Data -D VCPKG_TARGET_TRIPLET:STRING=x64-linux-dynamic
        continue-on-error: true
      - name: Print error
        shell: bash
        run: |
          printf "/usr/local/share/vcpkg/buildtrees/boost-mp11:\n"
          ls /usr/local/share/vcpkg/buildtrees/boost-mp11
          printf "install-x64-linux-dynamic-dbg-err.log:\n"
          cat /usr/local/share/vcpkg/buildtrees/boost-mp11/install-x64-linux-dynamic-dbg-err.log
          printf "install-x64-linux-dynamic-dbg-out.log:\n"
          cat /usr/local/share/vcpkg/buildtrees/boost-mp11/install-x64-linux-dynamic-dbg-out.log
          printf "config-x64-linux-dynamic-dbg-err.log:\n"
          cat /usr/local/share/vcpkg/buildtrees/boost-mp11/config-x64-linux-dynamic-dbg-err.log
          printf "config-x64-linux-dynamic-dbg-out.log:\n"
          cat /usr/local/share/vcpkg/buildtrees/boost-mp11/config-x64-linux-dynamic-dbg-out.log
          printf "stdout-x64-linux-dynamic.log:\n"
          cat /usr/local/share/vcpkg/buildtrees/boost-mp11/stdout-x64-linux-dynamic.log
          printf "include:\n"
          ls /usr/local/share/vcpkg/buildtrees/boost-mp11/x64-linux-dynamic-dbg/_deps/boostorg_cmake-src/include
      - name: Build
        run: |
          cmake --build --preset ci
      - name: Test
        run: |
          ctest --preset ci
